{"ast":null,"code":"export function register() {\n  if ('serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n      navigator.serviceWorker.register('/service-worker.js').then(registration => {\n        console.log('ServiceWorker registration successful');\n      }).catch(err => {\n        console.log('ServiceWorker registration failed: ', err);\n      });\n    });\n  }\n}\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","map":{"version":3,"names":["register","navigator","window","addEventListener","serviceWorker","then","registration","console","log","catch","err","unregister","ready"],"sources":["C:/Users/lelia/gallery/src/service-worker-reg.js"],"sourcesContent":["export function register() {\r\n  if ('serviceWorker' in navigator) {\r\n    window.addEventListener('load', () => {\r\n      navigator.serviceWorker\r\n        .register('/service-worker.js')\r\n        .then((registration) => {\r\n          console.log('ServiceWorker registration successful');\r\n        })\r\n        .catch((err) => {\r\n          console.log('ServiceWorker registration failed: ', err);\r\n        });\r\n    });\r\n  }\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}"],"mappings":"AAAA,OAAO,SAASA,QAAQA,CAAA,EAAG;EACzB,IAAI,eAAe,IAAIC,SAAS,EAAE;IAChCC,MAAM,CAACC,gBAAgB,CAAC,MAAM,EAAE,MAAM;MACpCF,SAAS,CAACG,aAAa,CACpBJ,QAAQ,CAAC,oBAAoB,CAAC,CAC9BK,IAAI,CAAEC,YAAY,IAAK;QACtBC,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;MACtD,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;QACdH,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEE,GAAG,CAAC;MACzD,CAAC,CAAC;IACN,CAAC,CAAC;EACJ;AACF;AAEA,OAAO,SAASC,UAAUA,CAAA,EAAG;EAC3B,IAAI,eAAe,IAAIV,SAAS,EAAE;IAChCA,SAAS,CAACG,aAAa,CAACQ,KAAK,CAACP,IAAI,CAAEC,YAAY,IAAK;MACnDA,YAAY,CAACK,UAAU,CAAC,CAAC;IAC3B,CAAC,CAAC;EACJ;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}