{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lelia\\\\gallery\\\\src\\\\pages\\\\ImageView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ImageDetail from '../components/ImageDetail';\nimport { getImageById, updateImage } from '../services/storage';\nimport TextComment from '../components/TextComment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageView() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [image, setImage] = useState(null);\n  useEffect(() => {\n    const loadImage = async () => {\n      const loadedImage = await getImageById(id);\n      setImage(loadedImage);\n    };\n    loadImage();\n  }, [id]);\n  {\n    image.textComments && image.textComments.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-comments\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Text Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: image.textComments.map((comment, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: comment\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 3\n    }, this);\n  }\n  /*#__PURE__*/_jsxDEV(TextComment, {\n    onSave: text => handleTextCommentSave(image.id, text)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n  const handleDrawingSave = async (imageId, drawingUrl) => {\n    const updatedImage = await updateImage(imageId, {\n      drawing: drawingUrl\n    });\n    setImage(updatedImage);\n  };\n  const handleAudioCommentSave = async (imageId, audioUrl) => {\n    const updatedImage = await updateImage(imageId, {\n      audioComments: [...(image.audioComments || []), audioUrl]\n    });\n    setImage(updatedImage);\n  };\n  if (!image) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n  const handleTextCommentSave = async (imageId, commentText) => {\n    const updatedImage = await updateImage(imageId, {\n      textComments: [...(image.textComments || []), commentText]\n    });\n    setImage(updatedImage);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-view\",\n    children: /*#__PURE__*/_jsxDEV(ImageDetail, {\n      image: image,\n      onDrawingSave: handleDrawingSave,\n      onAudioCommentSave: handleAudioCommentSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageView, \"qeoOP+m6gvbnBCYdbwKl9sMjK90=\", false, function () {\n  return [useParams];\n});\n_c = ImageView;\nexport default ImageView;\nvar _c;\n$RefreshReg$(_c, \"ImageView\");","map":{"version":3,"names":["React","useState","useEffect","useParams","ImageDetail","getImageById","updateImage","TextComment","jsxDEV","_jsxDEV","ImageView","_s","id","image","setImage","loadImage","loadedImage","textComments","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","comment","idx","onSave","text","handleTextCommentSave","handleDrawingSave","imageId","drawingUrl","updatedImage","drawing","handleAudioCommentSave","audioUrl","audioComments","commentText","onDrawingSave","onAudioCommentSave","_c","$RefreshReg$"],"sources":["C:/Users/lelia/gallery/src/pages/ImageView.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport ImageDetail from '../components/ImageDetail';\r\nimport { getImageById, updateImage } from '../services/storage';\r\nimport TextComment from '../components/TextComment'; \r\n\r\nfunction ImageView() {\r\n  const { id } = useParams();\r\n  const [image, setImage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const loadImage = async () => {\r\n      const loadedImage = await getImageById(id);\r\n      setImage(loadedImage);\r\n    };\r\n    loadImage();\r\n  }, [id]);\r\n\r\n  {image.textComments && image.textComments.length > 0 && (\r\n  <div className=\"text-comments\">\r\n    <h3>Text Comments</h3>\r\n    <ul>\r\n      {image.textComments.map((comment, idx) => (\r\n        <li key={idx}>{comment}</li>\r\n      ))}\r\n    </ul>\r\n  </div>\r\n)}\r\n\r\n  <TextComment onSave={(text) => handleTextCommentSave(image.id, text)} />\r\n\r\n  const handleDrawingSave = async (imageId, drawingUrl) => {\r\n    const updatedImage = await updateImage(imageId, { drawing: drawingUrl });\r\n    setImage(updatedImage);\r\n  };\r\n\r\n  const handleAudioCommentSave = async (imageId, audioUrl) => {\r\n  const updatedImage = await updateImage(imageId, { \r\n    audioComments: [...(image.audioComments || []), audioUrl]\r\n  });\r\n  setImage(updatedImage);\r\n  };\r\n  if (!image) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  const handleTextCommentSave = async (imageId, commentText) => {\r\n  const updatedImage = await updateImage(imageId, {\r\n    textComments: [...(image.textComments || []), commentText],\r\n  });\r\n  setImage(updatedImage);\r\n};\r\n\r\n  return (\r\n    <div className=\"image-view\">\r\n      <ImageDetail \r\n        image={image} \r\n        onDrawingSave={handleDrawingSave}\r\n        onAudioCommentSave={handleAudioCommentSave}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}