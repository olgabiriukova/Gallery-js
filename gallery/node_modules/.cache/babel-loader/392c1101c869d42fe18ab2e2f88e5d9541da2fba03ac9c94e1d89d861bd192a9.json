{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lelia\\\\gallery\\\\src\\\\components\\\\OfflineStatus.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OfflineStatus() {\n  _s();\n  const [isOnline, setIsOnline] = useState(navigator.onLine);\n  const checkInternet = () => {\n    fetch('https://www.google.com/favicon.ico', {\n      method: 'HEAD',\n      cache: 'no-cache'\n    }).then(() => setIsOnline(true)).catch(() => setIsOnline(false));\n  };\n  useEffect(() => {\n    // Первичная проверка\n    checkInternet();\n\n    // Обновлять статус при смене событий сети\n    const updateOnlineStatus = () => {\n      if (navigator.onLine) {\n        checkInternet(); // если есть сеть, проверяем интернет\n      } else {\n        setIsOnline(false); // если нет сети — offline\n      }\n    };\n    window.addEventListener('online', updateOnlineStatus);\n    window.addEventListener('offline', updateOnlineStatus);\n    return () => {\n      window.removeEventListener('online', updateOnlineStatus);\n      window.removeEventListener('offline', updateOnlineStatus);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'fixed',\n      top: 10,\n      right: 10,\n      padding: '0.3rem 0.8rem',\n      backgroundColor: isOnline ? 'green' : 'red',\n      color: 'white',\n      borderRadius: '12px',\n      fontWeight: 'bold',\n      zIndex: 1000,\n      userSelect: 'none'\n    },\n    title: isOnline ? 'You are online' : 'You are offline',\n    children: isOnline ? 'Online' : 'Offline'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(OfflineStatus, \"Hl7ZEYKUlCNDUCBSLoXEW/QIeeE=\");\n_c = OfflineStatus;\nexport default OfflineStatus;\nvar _c;\n$RefreshReg$(_c, \"OfflineStatus\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","OfflineStatus","_s","isOnline","setIsOnline","navigator","onLine","checkInternet","fetch","method","cache","then","catch","updateOnlineStatus","window","addEventListener","removeEventListener","style","position","top","right","padding","backgroundColor","color","borderRadius","fontWeight","zIndex","userSelect","title","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/lelia/gallery/src/components/OfflineStatus.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction OfflineStatus() {\r\n  const [isOnline, setIsOnline] = useState(navigator.onLine);\r\n\r\n  const checkInternet = () => {\r\n    fetch('https://www.google.com/favicon.ico', { method: 'HEAD', cache: 'no-cache' })\r\n      .then(() => setIsOnline(true))\r\n      .catch(() => setIsOnline(false));\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Первичная проверка\r\n    checkInternet();\r\n\r\n    // Обновлять статус при смене событий сети\r\n    const updateOnlineStatus = () => {\r\n      if (navigator.onLine) {\r\n        checkInternet(); // если есть сеть, проверяем интернет\r\n      } else {\r\n        setIsOnline(false); // если нет сети — offline\r\n      }\r\n    };\r\n\r\n    window.addEventListener('online', updateOnlineStatus);\r\n    window.addEventListener('offline', updateOnlineStatus);\r\n\r\n    return () => {\r\n      window.removeEventListener('online', updateOnlineStatus);\r\n      window.removeEventListener('offline', updateOnlineStatus);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: 'fixed',\r\n        top: 10,\r\n        right: 10,\r\n        padding: '0.3rem 0.8rem',\r\n        backgroundColor: isOnline ? 'green' : 'red',\r\n        color: 'white',\r\n        borderRadius: '12px',\r\n        fontWeight: 'bold',\r\n        zIndex: 1000,\r\n        userSelect: 'none',\r\n      }}\r\n      title={isOnline ? 'You are online' : 'You are offline'}\r\n    >\r\n      {isOnline ? 'Online' : 'Offline'}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OfflineStatus;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAACQ,SAAS,CAACC,MAAM,CAAC;EAE1D,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1BC,KAAK,CAAC,oCAAoC,EAAE;MAAEC,MAAM,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAW,CAAC,CAAC,CAC/EC,IAAI,CAAC,MAAMP,WAAW,CAAC,IAAI,CAAC,CAAC,CAC7BQ,KAAK,CAAC,MAAMR,WAAW,CAAC,KAAK,CAAC,CAAC;EACpC,CAAC;EAEDN,SAAS,CAAC,MAAM;IACd;IACAS,aAAa,CAAC,CAAC;;IAEf;IACA,MAAMM,kBAAkB,GAAGA,CAAA,KAAM;MAC/B,IAAIR,SAAS,CAACC,MAAM,EAAE;QACpBC,aAAa,CAAC,CAAC,CAAC,CAAC;MACnB,CAAC,MAAM;QACLH,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;MACtB;IACF,CAAC;IAEDU,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEF,kBAAkB,CAAC;IACrDC,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEF,kBAAkB,CAAC;IAEtD,OAAO,MAAM;MACXC,MAAM,CAACE,mBAAmB,CAAC,QAAQ,EAAEH,kBAAkB,CAAC;MACxDC,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEH,kBAAkB,CAAC;IAC3D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA;IACEiB,KAAK,EAAE;MACLC,QAAQ,EAAE,OAAO;MACjBC,GAAG,EAAE,EAAE;MACPC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,eAAe;MACxBC,eAAe,EAAEnB,QAAQ,GAAG,OAAO,GAAG,KAAK;MAC3CoB,KAAK,EAAE,OAAO;MACdC,YAAY,EAAE,MAAM;MACpBC,UAAU,EAAE,MAAM;MAClBC,MAAM,EAAE,IAAI;MACZC,UAAU,EAAE;IACd,CAAE;IACFC,KAAK,EAAEzB,QAAQ,GAAG,gBAAgB,GAAG,iBAAkB;IAAA0B,QAAA,EAEtD1B,QAAQ,GAAG,QAAQ,GAAG;EAAS;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEV;AAAC/B,EAAA,CAlDQD,aAAa;AAAAiC,EAAA,GAAbjC,aAAa;AAoDtB,eAAeA,aAAa;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}