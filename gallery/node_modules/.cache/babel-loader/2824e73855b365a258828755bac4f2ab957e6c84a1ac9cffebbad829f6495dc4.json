{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lelia\\\\gallery\\\\src\\\\pages\\\\ImageView.jsx\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom'; // for access to match, history props\nimport ImageDetail from '../components/ImageDetail';\nimport ImageService from '../services/ImageService';\n\n/**\r\n * Class-based React component for image detail view.\r\n * Uses ImageService instance for all API calls.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ImageView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // Initialize component state\n    this.state = {\n      image: null,\n      loading: true,\n      error: null\n    };\n\n    // Create ImageService instance for data operations\n    this.imageService = new ImageService();\n\n    // Bind event handlers to \"this\"\n    this.handleUpdate = this.handleUpdate.bind(this);\n    this.handleDeleteTextComment = this.handleDeleteTextComment.bind(this);\n    this.handleDeleteAudioComment = this.handleDeleteAudioComment.bind(this);\n    this.handleDeleteDrawing = this.handleDeleteDrawing.bind(this);\n    this.handleDeleteImage = this.handleDeleteImage.bind(this);\n  }\n\n  // Lifecycle: load image when component mounts\n  componentDidMount() {\n    this.loadImage();\n  }\n\n  // Lifecycle: reload image if route param changes\n  componentDidUpdate(prevProps) {\n    if (prevProps.match.params.id !== this.props.match.params.id) {\n      this.loadImage();\n    }\n  }\n\n  // Load image data from API\n  async loadImage() {\n    const {\n      id\n    } = this.props.match.params;\n    this.setState({\n      loading: true,\n      error: null\n    });\n    try {\n      const image = await this.imageService.getImageById(id);\n      this.setState({\n        image,\n        loading: false\n      });\n    } catch (error) {\n      this.setState({\n        error: error.message,\n        loading: false\n      });\n    }\n  }\n\n  // Update image fields (e.g. add comments, save drawing)\n  async handleUpdate(fields) {\n    const {\n      id\n    } = this.props.match.params;\n    try {\n      const updatedImage = await this.imageService.updateImage(id, fields);\n      this.setState({\n        image: updatedImage\n      });\n    } catch (error) {\n      console.error('Failed to update image:', error);\n    }\n  }\n\n  // Delete text comment by index\n  async handleDeleteTextComment(idx) {\n    const {\n      id\n    } = this.props.match.params;\n    try {\n      const updatedImage = await this.imageService.deleteTextComment(id, idx);\n      this.setState({\n        image: updatedImage\n      });\n    } catch (error) {\n      console.error('Failed to delete text comment:', error);\n    }\n  }\n\n  // Delete audio comment by index\n  async handleDeleteAudioComment(idx) {\n    const {\n      id\n    } = this.props.match.params;\n    try {\n      const updatedImage = await this.imageService.deleteAudioComment(id, idx);\n      this.setState({\n        image: updatedImage\n      });\n    } catch (error) {\n      console.error('Failed to delete audio comment:', error);\n    }\n  }\n\n  // Delete drawing\n  async handleDeleteDrawing() {\n    const {\n      id\n    } = this.props.match.params;\n    try {\n      const updatedImage = await this.imageService.deleteDrawing(id);\n      this.setState({\n        image: updatedImage\n      });\n    } catch (error) {\n      console.error('Failed to delete drawing:', error);\n    }\n  }\n\n  // Delete entire image and navigate back to home\n  async handleDeleteImage() {\n    const {\n      id\n    } = this.props.match.params;\n    try {\n      await this.imageService.deleteImage(id);\n      this.props.history.push('/');\n    } catch (error) {\n      console.error('Failed to delete image:', error);\n    }\n  }\n  render() {\n    const {\n      image,\n      loading,\n      error\n    } = this.state;\n    if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 23\n    }, this);\n    return /*#__PURE__*/_jsxDEV(ImageDetail, {\n      image: image,\n      onDrawingSave: drawing => this.handleUpdate({\n        drawing\n      }),\n      onAudioCommentSave: audioUrl => this.handleUpdate({\n        audioComments: [...(image.audioComments || []), audioUrl]\n      }),\n      onTextCommentSave: text => this.handleUpdate({\n        textComments: [...(image.textComments || []), text]\n      }),\n      onDeleteTextComment: this.handleDeleteTextComment,\n      onDeleteAudioComment: this.handleDeleteAudioComment,\n      onDeleteDrawing: this.handleDeleteDrawing,\n      onDeleteImage: this.handleDeleteImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n// Wrap component to get access to router props (match, history)\nexport default _c = withRouter(ImageView);\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["React","withRouter","ImageDetail","ImageService","jsxDEV","_jsxDEV","ImageView","Component","constructor","props","state","image","loading","error","imageService","handleUpdate","bind","handleDeleteTextComment","handleDeleteAudioComment","handleDeleteDrawing","handleDeleteImage","componentDidMount","loadImage","componentDidUpdate","prevProps","match","params","id","setState","getImageById","message","fields","updatedImage","updateImage","console","idx","deleteTextComment","deleteAudioComment","deleteDrawing","deleteImage","history","push","render","children","fileName","_jsxFileName","lineNumber","columnNumber","onDrawingSave","drawing","onAudioCommentSave","audioUrl","audioComments","onTextCommentSave","text","textComments","onDeleteTextComment","onDeleteAudioComment","onDeleteDrawing","onDeleteImage","_c","$RefreshReg$"],"sources":["C:/Users/lelia/gallery/src/pages/ImageView.jsx"],"sourcesContent":["import React from 'react';\r\nimport { withRouter } from 'react-router-dom'; // for access to match, history props\r\nimport ImageDetail from '../components/ImageDetail';\r\nimport ImageService from '../services/ImageService';\r\n\r\n/**\r\n * Class-based React component for image detail view.\r\n * Uses ImageService instance for all API calls.\r\n */\r\nclass ImageView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Initialize component state\r\n    this.state = {\r\n      image: null,\r\n      loading: true,\r\n      error: null,\r\n    };\r\n\r\n    // Create ImageService instance for data operations\r\n    this.imageService = new ImageService();\r\n\r\n    // Bind event handlers to \"this\"\r\n    this.handleUpdate = this.handleUpdate.bind(this);\r\n    this.handleDeleteTextComment = this.handleDeleteTextComment.bind(this);\r\n    this.handleDeleteAudioComment = this.handleDeleteAudioComment.bind(this);\r\n    this.handleDeleteDrawing = this.handleDeleteDrawing.bind(this);\r\n    this.handleDeleteImage = this.handleDeleteImage.bind(this);\r\n  }\r\n\r\n  // Lifecycle: load image when component mounts\r\n  componentDidMount() {\r\n    this.loadImage();\r\n  }\r\n\r\n  // Lifecycle: reload image if route param changes\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.match.params.id !== this.props.match.params.id) {\r\n      this.loadImage();\r\n    }\r\n  }\r\n\r\n  // Load image data from API\r\n  async loadImage() {\r\n    const { id } = this.props.match.params;\r\n\r\n    this.setState({ loading: true, error: null });\r\n\r\n    try {\r\n      const image = await this.imageService.getImageById(id);\r\n      this.setState({ image, loading: false });\r\n    } catch (error) {\r\n      this.setState({ error: error.message, loading: false });\r\n    }\r\n  }\r\n\r\n  // Update image fields (e.g. add comments, save drawing)\r\n  async handleUpdate(fields) {\r\n    const { id } = this.props.match.params;\r\n\r\n    try {\r\n      const updatedImage = await this.imageService.updateImage(id, fields);\r\n      this.setState({ image: updatedImage });\r\n    } catch (error) {\r\n      console.error('Failed to update image:', error);\r\n    }\r\n  }\r\n\r\n  // Delete text comment by index\r\n  async handleDeleteTextComment(idx) {\r\n    const { id } = this.props.match.params;\r\n\r\n    try {\r\n      const updatedImage = await this.imageService.deleteTextComment(id, idx);\r\n      this.setState({ image: updatedImage });\r\n    } catch (error) {\r\n      console.error('Failed to delete text comment:', error);\r\n    }\r\n  }\r\n\r\n  // Delete audio comment by index\r\n  async handleDeleteAudioComment(idx) {\r\n    const { id } = this.props.match.params;\r\n\r\n    try {\r\n      const updatedImage = await this.imageService.deleteAudioComment(id, idx);\r\n      this.setState({ image: updatedImage });\r\n    } catch (error) {\r\n      console.error('Failed to delete audio comment:', error);\r\n    }\r\n  }\r\n\r\n  // Delete drawing\r\n  async handleDeleteDrawing() {\r\n    const { id } = this.props.match.params;\r\n\r\n    try {\r\n      const updatedImage = await this.imageService.deleteDrawing(id);\r\n      this.setState({ image: updatedImage });\r\n    } catch (error) {\r\n      console.error('Failed to delete drawing:', error);\r\n    }\r\n  }\r\n\r\n  // Delete entire image and navigate back to home\r\n  async handleDeleteImage() {\r\n    const { id } = this.props.match.params;\r\n\r\n    try {\r\n      await this.imageService.deleteImage(id);\r\n      this.props.history.push('/');\r\n    } catch (error) {\r\n      console.error('Failed to delete image:', error);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { image, loading, error } = this.state;\r\n\r\n    if (loading) return <div>Loading...</div>;\r\n    if (error) return <div>Error: {error}</div>;\r\n\r\n    return (\r\n      <ImageDetail\r\n        image={image}\r\n        onDrawingSave={(drawing) => this.handleUpdate({ drawing })}\r\n        onAudioCommentSave={(audioUrl) =>\r\n          this.handleUpdate({\r\n            audioComments: [...(image.audioComments || []), audioUrl],\r\n          })\r\n        }\r\n        onTextCommentSave={(text) =>\r\n          this.handleUpdate({\r\n            textComments: [...(image.textComments || []), text],\r\n          })\r\n        }\r\n        onDeleteTextComment={this.handleDeleteTextComment}\r\n        onDeleteAudioComment={this.handleDeleteAudioComment}\r\n        onDeleteDrawing={this.handleDeleteDrawing}\r\n        onDeleteImage={this.handleDeleteImage}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\n// Wrap component to get access to router props (match, history)\r\nexport default withRouter(ImageView);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}