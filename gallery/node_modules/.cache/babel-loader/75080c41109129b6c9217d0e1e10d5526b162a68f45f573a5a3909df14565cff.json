{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lelia\\\\gallery\\\\src\\\\components\\\\DrawingCanvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DrawingCanvas({\n  imageSrc,\n  onSave\n}) {\n  _s();\n  const backgroundCanvasRef = useRef(null);\n  const drawingCanvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [color, setColor] = useState('#000000');\n  const [brushSize, setBrushSize] = useState(5);\n  const [isEraser, setIsEraser] = useState(false);\n  useEffect(() => {\n    const bgCanvas = backgroundCanvasRef.current;\n    const ctx = bgCanvas.getContext('2d');\n    const img = new Image();\n    img.crossOrigin = 'anonymous';\n    img.onload = () => {\n      bgCanvas.width = img.width;\n      bgCanvas.height = img.height;\n      drawingCanvasRef.current.width = img.width;\n      drawingCanvasRef.current.height = img.height;\n      ctx.drawImage(img, 0, 0);\n    };\n    img.src = imageSrc;\n  }, [imageSrc]);\n  const getMousePos = e => {\n    const rect = drawingCanvasRef.current.getBoundingClientRect();\n    return {\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top\n    };\n  };\n  const startDrawing = e => {\n    const ctx = drawingCanvasRef.current.getContext('2d');\n    const {\n      x,\n      y\n    } = getMousePos(e);\n    ctx.beginPath();\n    ctx.moveTo(x, y);\n    ctx.lineWidth = brushSize;\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n    ctx.globalCompositeOperation = isEraser ? 'destination-out' : 'source-over';\n    ctx.strokeStyle = color;\n    setIsDrawing(true);\n  };\n  const draw = e => {\n    if (!isDrawing) return;\n    const ctx = drawingCanvasRef.current.getContext('2d');\n    const {\n      x,\n      y\n    } = getMousePos(e);\n    ctx.lineTo(x, y);\n    ctx.stroke();\n  };\n  const stopDrawing = () => {\n    setIsDrawing(false);\n  };\n  const handleSave = () => {\n    const bgCanvas = backgroundCanvasRef.current;\n    const drawingCanvas = drawingCanvasRef.current;\n\n    // Создаём временный canvas\n    const finalCanvas = document.createElement('canvas');\n    finalCanvas.width = bgCanvas.width;\n    finalCanvas.height = bgCanvas.height;\n    const ctx = finalCanvas.getContext('2d');\n    ctx.drawImage(bgCanvas, 0, 0);\n    ctx.drawImage(drawingCanvas, 0, 0);\n    const dataUrl = finalCanvas.toDataURL('image/png');\n    onSave(dataUrl);\n  };\n  const resetDrawing = () => {\n    const ctx = drawingCanvasRef.current.getContext('2d');\n    ctx.clearRect(0, 0, drawingCanvasRef.current.width, drawingCanvasRef.current.height);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"drawing-canvas\",\n    style: {\n      position: 'relative',\n      display: 'inline-block'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: backgroundCanvasRef,\n      style: {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        zIndex: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: drawingCanvasRef,\n      style: {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        zIndex: 1,\n        cursor: isEraser ? 'cell' : 'crosshair'\n      },\n      onMouseDown: startDrawing,\n      onMouseMove: draw,\n      onMouseUp: stopDrawing,\n      onMouseLeave: stopDrawing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drawing-controls\",\n      style: {\n        marginTop: 'calc(100% + 10px)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Color:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          value: color,\n          onChange: e => setColor(e.target.value),\n          disabled: isEraser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Brush Size:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"1\",\n          max: \"50\",\n          value: brushSize,\n          onChange: e => setBrushSize(+e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isEraser,\n          onChange: () => setIsEraser(!isEraser)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), \"Eraser\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetDrawing,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        children: \"Save Drawing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(DrawingCanvas, \"45TOyPsnPtrYHgG5YLc+As4iESg=\");\n_c = DrawingCanvas;\nexport default DrawingCanvas;\nvar _c;\n$RefreshReg$(_c, \"DrawingCanvas\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","DrawingCanvas","imageSrc","onSave","_s","backgroundCanvasRef","drawingCanvasRef","isDrawing","setIsDrawing","color","setColor","brushSize","setBrushSize","isEraser","setIsEraser","bgCanvas","current","ctx","getContext","img","Image","crossOrigin","onload","width","height","drawImage","src","getMousePos","e","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","startDrawing","beginPath","moveTo","lineWidth","lineCap","lineJoin","globalCompositeOperation","strokeStyle","draw","lineTo","stroke","stopDrawing","handleSave","drawingCanvas","finalCanvas","document","createElement","dataUrl","toDataURL","resetDrawing","clearRect","className","style","position","display","children","ref","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","cursor","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","marginTop","type","value","onChange","target","disabled","min","max","checked","onClick","_c","$RefreshReg$"],"sources":["C:/Users/lelia/gallery/src/components/DrawingCanvas.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\n\r\nfunction DrawingCanvas({ imageSrc, onSave }) {\r\n  const backgroundCanvasRef = useRef(null);\r\n  const drawingCanvasRef = useRef(null);\r\n\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n  const [color, setColor] = useState('#000000');\r\n  const [brushSize, setBrushSize] = useState(5);\r\n  const [isEraser, setIsEraser] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const bgCanvas = backgroundCanvasRef.current;\r\n    const ctx = bgCanvas.getContext('2d');\r\n    const img = new Image();\r\n    img.crossOrigin = 'anonymous';\r\n\r\n    img.onload = () => {\r\n      bgCanvas.width = img.width;\r\n      bgCanvas.height = img.height;\r\n\r\n      drawingCanvasRef.current.width = img.width;\r\n      drawingCanvasRef.current.height = img.height;\r\n\r\n      ctx.drawImage(img, 0, 0);\r\n    };\r\n\r\n    img.src = imageSrc;\r\n  }, [imageSrc]);\r\n\r\n  const getMousePos = (e) => {\r\n    const rect = drawingCanvasRef.current.getBoundingClientRect();\r\n    return {\r\n      x: e.clientX - rect.left,\r\n      y: e.clientY - rect.top,\r\n    };\r\n  };\r\n\r\n  const startDrawing = (e) => {\r\n    const ctx = drawingCanvasRef.current.getContext('2d');\r\n    const { x, y } = getMousePos(e);\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(x, y);\r\n    ctx.lineWidth = brushSize;\r\n    ctx.lineCap = 'round';\r\n    ctx.lineJoin = 'round';\r\n\r\n    ctx.globalCompositeOperation = isEraser ? 'destination-out' : 'source-over';\r\n    ctx.strokeStyle = color;\r\n\r\n    setIsDrawing(true);\r\n  };\r\n\r\n  const draw = (e) => {\r\n    if (!isDrawing) return;\r\n\r\n    const ctx = drawingCanvasRef.current.getContext('2d');\r\n    const { x, y } = getMousePos(e);\r\n\r\n    ctx.lineTo(x, y);\r\n    ctx.stroke();\r\n  };\r\n\r\n  const stopDrawing = () => {\r\n    setIsDrawing(false);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    const bgCanvas = backgroundCanvasRef.current;\r\n    const drawingCanvas = drawingCanvasRef.current;\r\n\r\n    // Создаём временный canvas\r\n    const finalCanvas = document.createElement('canvas');\r\n    finalCanvas.width = bgCanvas.width;\r\n    finalCanvas.height = bgCanvas.height;\r\n\r\n    const ctx = finalCanvas.getContext('2d');\r\n    ctx.drawImage(bgCanvas, 0, 0);\r\n    ctx.drawImage(drawingCanvas, 0, 0);\r\n\r\n    const dataUrl = finalCanvas.toDataURL('image/png');\r\n    onSave(dataUrl);\r\n  };\r\n\r\n  const resetDrawing = () => {\r\n    const ctx = drawingCanvasRef.current.getContext('2d');\r\n    ctx.clearRect(0, 0, drawingCanvasRef.current.width, drawingCanvasRef.current.height);\r\n  };\r\n\r\n  return (\r\n    <div className=\"drawing-canvas\" style={{ position: 'relative', display: 'inline-block' }}>\r\n      <canvas ref={backgroundCanvasRef} style={{ position: 'absolute', left: 0, top: 0, zIndex: 0 }} />\r\n      <canvas\r\n        ref={drawingCanvasRef}\r\n        style={{ position: 'absolute', left: 0, top: 0, zIndex: 1, cursor: isEraser ? 'cell' : 'crosshair' }}\r\n        onMouseDown={startDrawing}\r\n        onMouseMove={draw}\r\n        onMouseUp={stopDrawing}\r\n        onMouseLeave={stopDrawing}\r\n      />\r\n      <div className=\"drawing-controls\" style={{ marginTop: 'calc(100% + 10px)' }}>\r\n        <label>\r\n          Color:\r\n          <input type=\"color\" value={color} onChange={(e) => setColor(e.target.value)} disabled={isEraser} />\r\n        </label>\r\n        <label>\r\n          Brush Size:\r\n          <input type=\"range\" min=\"1\" max=\"50\" value={brushSize} onChange={(e) => setBrushSize(+e.target.value)} />\r\n        </label>\r\n        <label>\r\n          <input type=\"checkbox\" checked={isEraser} onChange={() => setIsEraser(!isEraser)} />\r\n          Eraser\r\n        </label>\r\n        <button onClick={resetDrawing}>Reset</button>\r\n        <button onClick={handleSave}>Save Drawing</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DrawingCanvas;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}