{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lelia\\\\gallery\\\\src\\\\components\\\\DrawingCanvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DrawingCanvas({\n  imageSrc,\n  onSave\n}) {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [color, setColor] = useState('#000000');\n  const [brushSize, setBrushSize] = useState(5);\n  const [isEraser, setIsEraser] = useState(false);\n  const [originalImageData, setOriginalImageData] = useState(null);\n  useEffect(() => {\n    if (imageSrc) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      const img = new Image();\n      img.crossOrigin = 'anonymous';\n      img.onload = () => {\n        canvas.width = img.width;\n        canvas.height = img.height;\n        ctx.drawImage(img, 0, 0);\n\n        // Сохраняем оригинальное изображение\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n        setOriginalImageData(imageData);\n      };\n      img.src = imageSrc;\n    }\n  }, [imageSrc]);\n  const getMousePos = e => {\n    const rect = canvasRef.current.getBoundingClientRect();\n    return {\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top\n    };\n  };\n  const startDrawing = e => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const {\n      x,\n      y\n    } = getMousePos(e);\n    ctx.beginPath();\n    ctx.moveTo(x, y);\n    ctx.lineWidth = brushSize;\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n    if (isEraser) {\n      // В режиме ластика используем композитную операцию\n      ctx.globalCompositeOperation = 'destination-out';\n    } else {\n      ctx.globalCompositeOperation = 'source-over';\n      ctx.strokeStyle = color;\n    }\n    setIsDrawing(true);\n  };\n  const draw = e => {\n    if (!isDrawing) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const {\n      x,\n      y\n    } = getMousePos(e);\n    ctx.lineTo(x, y);\n    ctx.stroke();\n  };\n  const stopDrawing = () => {\n    setIsDrawing(false);\n  };\n  const handleSave = () => {\n    const canvas = canvasRef.current;\n    const dataUrl = canvas.toDataURL('image/png');\n    onSave(dataUrl);\n  };\n  const resetDrawing = () => {\n    if (originalImageData) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      ctx.putImageData(originalImageData, 0, 0);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"drawing-canvas\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      onMouseDown: startDrawing,\n      onMouseMove: draw,\n      onMouseUp: stopDrawing,\n      onMouseLeave: stopDrawing,\n      style: {\n        border: '1px solid #ccc',\n        cursor: isEraser ? 'cell' : 'crosshair'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drawing-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Color:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          value: color,\n          onChange: e => setColor(e.target.value),\n          disabled: isEraser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Brush Size:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"1\",\n          max: \"50\",\n          value: brushSize,\n          onChange: e => setBrushSize(parseInt(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isEraser,\n          onChange: () => setIsEraser(!isEraser)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), \"Eraser\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetDrawing,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        children: \"Save Drawing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(DrawingCanvas, \"DiEGGVWYyOr6brv7j3dTBaQRIL0=\");\n_c = DrawingCanvas;\nexport default DrawingCanvas;\nvar _c;\n$RefreshReg$(_c, \"DrawingCanvas\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","DrawingCanvas","imageSrc","onSave","_s","canvasRef","isDrawing","setIsDrawing","color","setColor","brushSize","setBrushSize","isEraser","setIsEraser","originalImageData","setOriginalImageData","canvas","current","ctx","getContext","img","Image","crossOrigin","onload","width","height","drawImage","imageData","getImageData","src","getMousePos","e","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","startDrawing","beginPath","moveTo","lineWidth","lineCap","lineJoin","globalCompositeOperation","strokeStyle","draw","lineTo","stroke","stopDrawing","handleSave","dataUrl","toDataURL","resetDrawing","putImageData","className","children","ref","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","style","border","cursor","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","disabled","min","max","parseInt","checked","onClick","_c","$RefreshReg$"],"sources":["C:/Users/lelia/gallery/src/components/DrawingCanvas.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\n\r\nfunction DrawingCanvas({ imageSrc, onSave }) {\r\n  const canvasRef = useRef(null);\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n  const [color, setColor] = useState('#000000');\r\n  const [brushSize, setBrushSize] = useState(5);\r\n  const [isEraser, setIsEraser] = useState(false);\r\n  const [originalImageData, setOriginalImageData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (imageSrc) {\r\n      const canvas = canvasRef.current;\r\n      const ctx = canvas.getContext('2d');\r\n\r\n      const img = new Image();\r\n      img.crossOrigin = 'anonymous';\r\n\r\n      img.onload = () => {\r\n        canvas.width = img.width;\r\n        canvas.height = img.height;\r\n        ctx.drawImage(img, 0, 0);\r\n        \r\n        // Сохраняем оригинальное изображение\r\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n        setOriginalImageData(imageData);\r\n      };\r\n\r\n      img.src = imageSrc;\r\n    }\r\n  }, [imageSrc]);\r\n\r\n  const getMousePos = (e) => {\r\n    const rect = canvasRef.current.getBoundingClientRect();\r\n    return {\r\n      x: e.clientX - rect.left,\r\n      y: e.clientY - rect.top\r\n    };\r\n  };\r\n\r\n  const startDrawing = (e) => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    const { x, y } = getMousePos(e);\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(x, y);\r\n    ctx.lineWidth = brushSize;\r\n    ctx.lineCap = 'round';\r\n    ctx.lineJoin = 'round';\r\n\r\n    if (isEraser) {\r\n      // В режиме ластика используем композитную операцию\r\n      ctx.globalCompositeOperation = 'destination-out';\r\n    } else {\r\n      ctx.globalCompositeOperation = 'source-over';\r\n      ctx.strokeStyle = color;\r\n    }\r\n\r\n    setIsDrawing(true);\r\n  };\r\n\r\n  const draw = (e) => {\r\n    if (!isDrawing) return;\r\n\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    const { x, y } = getMousePos(e);\r\n\r\n    ctx.lineTo(x, y);\r\n    ctx.stroke();\r\n  };\r\n\r\n  const stopDrawing = () => {\r\n    setIsDrawing(false);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    const canvas = canvasRef.current;\r\n    const dataUrl = canvas.toDataURL('image/png');\r\n    onSave(dataUrl);\r\n  };\r\n\r\n  const resetDrawing = () => {\r\n    if (originalImageData) {\r\n      const canvas = canvasRef.current;\r\n      const ctx = canvas.getContext('2d');\r\n      ctx.putImageData(originalImageData, 0, 0);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"drawing-canvas\">\r\n      <canvas\r\n        ref={canvasRef}\r\n        onMouseDown={startDrawing}\r\n        onMouseMove={draw}\r\n        onMouseUp={stopDrawing}\r\n        onMouseLeave={stopDrawing}\r\n        style={{ border: '1px solid #ccc', cursor: isEraser ? 'cell' : 'crosshair' }}\r\n      />\r\n      <div className=\"drawing-controls\">\r\n        <label>\r\n          Color:\r\n          <input \r\n            type=\"color\" \r\n            value={color} \r\n            onChange={(e) => setColor(e.target.value)} \r\n            disabled={isEraser}\r\n          />\r\n        </label>\r\n        <label>\r\n          Brush Size:\r\n          <input \r\n            type=\"range\" \r\n            min=\"1\" \r\n            max=\"50\" \r\n            value={brushSize} \r\n            onChange={(e) => setBrushSize(parseInt(e.target.value))} \r\n          />\r\n        </label>\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={isEraser}\r\n            onChange={() => setIsEraser(!isEraser)}\r\n          />\r\n          Eraser\r\n        </label>\r\n        <button onClick={resetDrawing}>Reset</button>\r\n        <button onClick={handleSave}>Save Drawing</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DrawingCanvas;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}