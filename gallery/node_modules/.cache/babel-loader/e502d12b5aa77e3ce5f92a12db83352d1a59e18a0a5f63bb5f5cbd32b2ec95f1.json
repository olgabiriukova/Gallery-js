{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lelia\\\\gallery\\\\src\\\\components\\\\DrawingCanvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DrawingCanvas({\n  imageSrc,\n  onSave\n}) {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [color, setColor] = useState('#000000');\n  const [brushSize, setBrushSize] = useState(5);\n  const [isEraser, setIsEraser] = useState(false);\n  useEffect(() => {\n    if (imageSrc) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      const img = new Image();\n      img.onload = () => {\n        canvas.width = img.width;\n        canvas.height = img.height;\n        ctx.drawImage(img, 0, 0);\n      };\n      img.src = imageSrc;\n    }\n  }, [imageSrc]);\n  const startDrawing = e => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    ctx.beginPath();\n    ctx.moveTo(x, y);\n    ctx.strokeStyle = isEraser ? '#ffffff' : color;\n    ctx.lineWidth = brushSize;\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n    setIsDrawing(true);\n  };\n  const draw = e => {\n    if (!isDrawing) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    ctx.lineTo(x, y);\n    ctx.stroke();\n  };\n  const stopDrawing = () => {\n    setIsDrawing(false);\n  };\n  const handleSave = () => {\n    const canvas = canvasRef.current;\n    const dataUrl = canvas.toDataURL('image/png');\n    onSave(dataUrl);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"drawing-canvas\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      onMouseDown: startDrawing,\n      onMouseMove: draw,\n      onMouseUp: stopDrawing,\n      onMouseLeave: stopDrawing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drawing-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Color:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          value: color,\n          onChange: e => setColor(e.target.value),\n          disabled: isEraser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Brush Size:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"1\",\n          max: \"20\",\n          value: brushSize,\n          onChange: e => setBrushSize(parseInt(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isEraser,\n          onChange: () => setIsEraser(!isEraser)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), \"Eraser\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        children: \"Save Drawing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(DrawingCanvas, \"SokNG46FbUoyF2PF2Y2L11MoyRo=\");\n_c = DrawingCanvas;\nexport default DrawingCanvas;\nvar _c;\n$RefreshReg$(_c, \"DrawingCanvas\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","DrawingCanvas","imageSrc","onSave","_s","canvasRef","isDrawing","setIsDrawing","color","setColor","brushSize","setBrushSize","isEraser","setIsEraser","canvas","current","ctx","getContext","img","Image","onload","width","height","drawImage","src","startDrawing","e","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","beginPath","moveTo","strokeStyle","lineWidth","lineCap","lineJoin","draw","lineTo","stroke","stopDrawing","handleSave","dataUrl","toDataURL","className","children","ref","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","disabled","min","max","parseInt","checked","onClick","_c","$RefreshReg$"],"sources":["C:/Users/lelia/gallery/src/components/DrawingCanvas.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\n\r\nfunction DrawingCanvas({ imageSrc, onSave }) {\r\n  const canvasRef = useRef(null);\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n  const [color, setColor] = useState('#000000');\r\n  const [brushSize, setBrushSize] = useState(5);\r\n  const [isEraser, setIsEraser] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (imageSrc) {\r\n      const canvas = canvasRef.current;\r\n      const ctx = canvas.getContext('2d');\r\n      const img = new Image();\r\n\r\n      img.onload = () => {\r\n        canvas.width = img.width;\r\n        canvas.height = img.height;\r\n        ctx.drawImage(img, 0, 0);\r\n      };\r\n\r\n      img.src = imageSrc;\r\n    }\r\n  }, [imageSrc]);\r\n\r\n  const startDrawing = (e) => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    const rect = canvas.getBoundingClientRect();\r\n    const x = e.clientX - rect.left;\r\n    const y = e.clientY - rect.top;\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(x, y);\r\n    ctx.strokeStyle = isEraser ? '#ffffff' : color;\r\n    ctx.lineWidth = brushSize;\r\n    ctx.lineCap = 'round';\r\n    ctx.lineJoin = 'round';\r\n    setIsDrawing(true);\r\n  };\r\n\r\n  const draw = (e) => {\r\n    if (!isDrawing) return;\r\n\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    const rect = canvas.getBoundingClientRect();\r\n    const x = e.clientX - rect.left;\r\n    const y = e.clientY - rect.top;\r\n\r\n    ctx.lineTo(x, y);\r\n    ctx.stroke();\r\n  };\r\n\r\n  const stopDrawing = () => {\r\n    setIsDrawing(false);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    const canvas = canvasRef.current;\r\n    const dataUrl = canvas.toDataURL('image/png');\r\n    onSave(dataUrl);\r\n  };\r\n\r\n  return (\r\n    <div className=\"drawing-canvas\">\r\n      <canvas\r\n        ref={canvasRef}\r\n        onMouseDown={startDrawing}\r\n        onMouseMove={draw}\r\n        onMouseUp={stopDrawing}\r\n        onMouseLeave={stopDrawing}\r\n      />\r\n      <div className=\"drawing-controls\">\r\n        <label>\r\n          Color:\r\n          <input \r\n            type=\"color\" \r\n            value={color} \r\n            onChange={(e) => setColor(e.target.value)} \r\n            disabled={isEraser}\r\n          />\r\n        </label>\r\n        <label>\r\n          Brush Size:\r\n          <input \r\n            type=\"range\" \r\n            min=\"1\" \r\n            max=\"20\" \r\n            value={brushSize} \r\n            onChange={(e) => setBrushSize(parseInt(e.target.value))} \r\n          />\r\n        </label>\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={isEraser}\r\n            onChange={() => setIsEraser(!isEraser)}\r\n          />\r\n          Eraser\r\n        </label>\r\n        <button onClick={handleSave}>Save Drawing</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DrawingCanvas;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}