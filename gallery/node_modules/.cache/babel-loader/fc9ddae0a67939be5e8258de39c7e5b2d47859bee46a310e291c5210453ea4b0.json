{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lelia\\\\gallery\\\\src\\\\pages\\\\ImageView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport ImageDetail from '../components/ImageDetail';\nimport { getImageById, updateImage, deleteTextComment, deleteAudioComment, deleteImage, deleteDrawing } from '../services/storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageView() {\n  _s();\n  const {\n    id\n  } = useParams(); // get image ID from URL params\n  const [image, setImage] = useState(null); // image data state\n  const navigate = useNavigate(); // navigation helper\n\n  // Load image data on mount and when id changes\n  useEffect(() => {\n    const loadImage = async () => {\n      const loadedImage = await getImageById(id);\n      setImage(loadedImage);\n    };\n    loadImage();\n  }, [id]);\n\n  // Update image with given fields and update state\n  const handleUpdate = async fields => {\n    const updatedImage = await updateImage(id, fields);\n    setImage(updatedImage);\n  };\n\n  // Delete specific text comment and update state\n  const handleDeleteTextComment = async idx => {\n    const updatedImage = await deleteTextComment(id, idx);\n    setImage(updatedImage);\n  };\n\n  // Delete specific audio comment and update state\n  const handleDeleteAudioComment = async idx => {\n    const updatedImage = await deleteAudioComment(id, idx);\n    setImage(updatedImage);\n  };\n\n  // Delete drawing and update state\n  const handleDeleteDrawing = async () => {\n    const updatedImage = await deleteDrawing(id);\n    setImage(updatedImage);\n  };\n\n  // Delete entire image and navigate back to home\n  const handleDeleteImage = async () => {\n    await deleteImage(id);\n    navigate('/');\n  };\n  if (!image) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(ImageDetail, {\n    image: image,\n    onDrawingSave: drawing => handleUpdate({\n      drawing\n    }),\n    onAudioCommentSave: audioUrl => handleUpdate({\n      audioComments: [...(image.audioComments || []), audioUrl]\n    }),\n    onTextCommentSave: text => handleUpdate({\n      textComments: [...(image.textComments || []), text]\n    }),\n    onDeleteTextComment: handleDeleteTextComment,\n    onDeleteAudioComment: handleDeleteAudioComment,\n    onDeleteDrawing: handleDeleteDrawing,\n    onDeleteImage: handleDeleteImage\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageView, \"m7cHRpDEMCf601V6wd3VCOu3nZs=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ImageView;\nexport default ImageView;\nvar _c;\n$RefreshReg$(_c, \"ImageView\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","ImageDetail","getImageById","updateImage","deleteTextComment","deleteAudioComment","deleteImage","deleteDrawing","jsxDEV","_jsxDEV","ImageView","_s","id","image","setImage","navigate","loadImage","loadedImage","handleUpdate","fields","updatedImage","handleDeleteTextComment","idx","handleDeleteAudioComment","handleDeleteDrawing","handleDeleteImage","children","fileName","_jsxFileName","lineNumber","columnNumber","onDrawingSave","drawing","onAudioCommentSave","audioUrl","audioComments","onTextCommentSave","text","textComments","onDeleteTextComment","onDeleteAudioComment","onDeleteDrawing","onDeleteImage","_c","$RefreshReg$"],"sources":["C:/Users/lelia/gallery/src/pages/ImageView.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport ImageDetail from '../components/ImageDetail';\r\nimport {\r\n  getImageById,\r\n  updateImage,\r\n  deleteTextComment,\r\n  deleteAudioComment,\r\n  deleteImage,\r\n  deleteDrawing\r\n} from '../services/storage';\r\n\r\nfunction ImageView() {\r\n  const { id } = useParams();          // get image ID from URL params\r\n  const [image, setImage] = useState(null);  // image data state\r\n  const navigate = useNavigate();      // navigation helper\r\n\r\n  // Load image data on mount and when id changes\r\n  useEffect(() => {\r\n    const loadImage = async () => {\r\n      const loadedImage = await getImageById(id);\r\n      setImage(loadedImage);\r\n    };\r\n    loadImage();\r\n  }, [id]);\r\n\r\n  // Update image with given fields and update state\r\n  const handleUpdate = async (fields) => {\r\n    const updatedImage = await updateImage(id, fields);\r\n    setImage(updatedImage);\r\n  };\r\n\r\n  // Delete specific text comment and update state\r\n  const handleDeleteTextComment = async (idx) => {\r\n    const updatedImage = await deleteTextComment(id, idx);\r\n    setImage(updatedImage);\r\n  };\r\n\r\n  // Delete specific audio comment and update state\r\n  const handleDeleteAudioComment = async (idx) => {\r\n    const updatedImage = await deleteAudioComment(id, idx);\r\n    setImage(updatedImage);\r\n  };\r\n\r\n  // Delete drawing and update state\r\n  const handleDeleteDrawing = async () => {\r\n    const updatedImage = await deleteDrawing(id);\r\n    setImage(updatedImage);\r\n  };\r\n\r\n  // Delete entire image and navigate back to home\r\n  const handleDeleteImage = async () => {\r\n    await deleteImage(id);\r\n    navigate('/');\r\n  };\r\n\r\n  if (!image) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <ImageDetail\r\n      image={image}\r\n      onDrawingSave={(drawing) => handleUpdate({ drawing })}\r\n      onAudioCommentSave={(audioUrl) => handleUpdate({\r\n        audioComments: [...(image.audioComments || []), audioUrl]\r\n      })}\r\n      onTextCommentSave={(text) => handleUpdate({\r\n        textComments: [...(image.textComments || []), text]\r\n      })}\r\n      onDeleteTextComment={handleDeleteTextComment}\r\n      onDeleteAudioComment={handleDeleteAudioComment}\r\n      onDeleteDrawing={handleDeleteDrawing}\r\n      onDeleteImage={handleDeleteImage}\r\n    />\r\n  );\r\n}\r\n\r\nexport default ImageView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}