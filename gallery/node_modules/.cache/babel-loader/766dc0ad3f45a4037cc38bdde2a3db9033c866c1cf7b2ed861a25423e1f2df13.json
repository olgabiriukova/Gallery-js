{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lelia\\\\gallery\\\\src\\\\components\\\\AudioComment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AudioComment({\n  onSave\n}) {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [audioUrl, setAudioUrl] = useState(null);\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const blobToBase64 = blob => new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onloadend = () => resolve(reader.result); // data:audio/wav;base64,...\n    reader.onerror = reject;\n    reader.readAsDataURL(blob);\n  });\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      audioChunksRef.current = [];\n      mediaRecorderRef.current.ondataavailable = e => {\n        audioChunksRef.current.push(e.data);\n      };\n      mediaRecorderRef.current.onstop = async () => {\n        const audioBlob = new Blob(audioChunksRef.current, {\n          type: 'audio/wav'\n        });\n        const base64Audio = await blobToBase64(audioBlob);\n        setAudioUrl(base64Audio);\n      };\n      mediaRecorderRef.current.start();\n      setIsRecording(true);\n    } catch (err) {\n      console.error('Error accessing microphone:', err);\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n      mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n      setIsRecording(false);\n    }\n  };\n  const handleSave = () => {\n    if (audioUrl) {\n      onSave(audioUrl); // base64 string передаётся в onAudioCommentSave\n      setAudioUrl(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-comment\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add Audio Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !isRecording ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startRecording,\n        children: \"Start Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopRecording,\n        children: \"Stop Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), audioUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        src: audioUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        children: \"Save Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(AudioComment, \"c5VTXwob7QD2BK4Ju1sHG97MSjw=\");\n_c = AudioComment;\nexport default AudioComment;\nvar _c;\n$RefreshReg$(_c, \"AudioComment\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","AudioComment","onSave","_s","isRecording","setIsRecording","audioUrl","setAudioUrl","mediaRecorderRef","audioChunksRef","blobToBase64","blob","Promise","resolve","reject","reader","FileReader","onloadend","result","onerror","readAsDataURL","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","current","MediaRecorder","ondataavailable","e","push","data","onstop","audioBlob","Blob","type","base64Audio","start","err","console","error","stopRecording","stop","getTracks","forEach","track","handleSave","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","controls","src","_c","$RefreshReg$"],"sources":["C:/Users/lelia/gallery/src/components/AudioComment.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\n\r\nfunction AudioComment({ onSave }) {\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [audioUrl, setAudioUrl] = useState(null);\r\n  const mediaRecorderRef = useRef(null);\r\n  const audioChunksRef = useRef([]);\r\n\r\n  const blobToBase64 = (blob) => new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.onloadend = () => resolve(reader.result); // data:audio/wav;base64,...\r\n    reader.onerror = reject;\r\n    reader.readAsDataURL(blob);\r\n  });\r\n\r\n  const startRecording = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      mediaRecorderRef.current = new MediaRecorder(stream);\r\n      audioChunksRef.current = [];\r\n      \r\n      mediaRecorderRef.current.ondataavailable = (e) => {\r\n        audioChunksRef.current.push(e.data);\r\n      };\r\n      \r\n      mediaRecorderRef.current.onstop = async () => {\r\n        const audioBlob = new Blob(audioChunksRef.current, { type: 'audio/wav' });\r\n        const base64Audio = await blobToBase64(audioBlob);\r\n        setAudioUrl(base64Audio);\r\n      };\r\n      \r\n      mediaRecorderRef.current.start();\r\n      setIsRecording(true);\r\n    } catch (err) {\r\n      console.error('Error accessing microphone:', err);\r\n    }\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    if (mediaRecorderRef.current && isRecording) {\r\n      mediaRecorderRef.current.stop();\r\n      mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\r\n      setIsRecording(false);\r\n    }\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (audioUrl) {\r\n      onSave(audioUrl); // base64 string передаётся в onAudioCommentSave\r\n      setAudioUrl(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"audio-comment\">\r\n      <h3>Add Audio Comment</h3>\r\n      <div>\r\n        {!isRecording ? (\r\n          <button onClick={startRecording}>Start Recording</button>\r\n        ) : (\r\n          <button onClick={stopRecording}>Stop Recording</button>\r\n        )}\r\n      </div>\r\n      {audioUrl && (\r\n        <div>\r\n          <audio controls src={audioUrl} />\r\n          <button onClick={handleSave}>Save Comment</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AudioComment;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}