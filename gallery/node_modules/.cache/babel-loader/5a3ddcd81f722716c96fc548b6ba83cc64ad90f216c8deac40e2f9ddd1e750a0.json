{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lelia\\\\gallery\\\\src\\\\components\\\\OfflineStatus.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OfflineStatus() {\n  _s();\n  // Track whether the user is actually online\n  const [isOnline, setIsOnline] = useState(navigator.onLine);\n\n  // Verifies real internet connectivity, not just network status\n  const checkInternet = () => {\n    // Attempt to fetch a small known resource without using cache\n    fetch('https://jsonplaceholder.typicode.com/posts/1', {\n      cache: 'no-cache'\n    }).then(() => setIsOnline(true)) // Successful fetch means we are online\n    .catch(() => setIsOnline(false)); // Failure likely means no internet\n  };\n  useEffect(() => {\n    // Initial connectivity check on mount\n    checkInternet();\n\n    // Handle browser 'online' and 'offline' events\n    const updateOnlineStatus = () => {\n      // If browser reports online, double-check with real fetch\n      if (navigator.onLine) {\n        checkInternet();\n      } else {\n        // If browser reports offline, trust it\n        setIsOnline(false);\n      }\n    };\n    window.addEventListener('online', updateOnlineStatus);\n    window.addEventListener('offline', updateOnlineStatus);\n\n    // Cleanup event listeners on unmount\n    return () => {\n      window.removeEventListener('online', updateOnlineStatus);\n      window.removeEventListener('offline', updateOnlineStatus);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'fixed',\n      top: 10,\n      right: 10,\n      padding: '0.3rem 0.8rem',\n      backgroundColor: isOnline ? 'green' : 'red',\n      color: 'white',\n      borderRadius: '12px',\n      fontWeight: 'bold',\n      zIndex: 1000,\n      userSelect: 'none'\n    },\n    title: isOnline ? 'You are online' : 'You are offline',\n    children: isOnline ? 'Online' : 'Offline'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(OfflineStatus, \"Hl7ZEYKUlCNDUCBSLoXEW/QIeeE=\");\n_c = OfflineStatus;\nexport default OfflineStatus;\nvar _c;\n$RefreshReg$(_c, \"OfflineStatus\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","OfflineStatus","_s","isOnline","setIsOnline","navigator","onLine","checkInternet","fetch","cache","then","catch","updateOnlineStatus","window","addEventListener","removeEventListener","style","position","top","right","padding","backgroundColor","color","borderRadius","fontWeight","zIndex","userSelect","title","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/lelia/gallery/src/components/OfflineStatus.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction OfflineStatus() {\r\n  // Track whether the user is actually online\r\n  const [isOnline, setIsOnline] = useState(navigator.onLine);\r\n\r\n  // Verifies real internet connectivity, not just network status\r\n  const checkInternet = () => {\r\n    // Attempt to fetch a small known resource without using cache\r\n    fetch('https://jsonplaceholder.typicode.com/posts/1', { cache: 'no-cache' })\r\n      .then(() => setIsOnline(true))  // Successful fetch means we are online\r\n      .catch(() => setIsOnline(false)); // Failure likely means no internet\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Initial connectivity check on mount\r\n    checkInternet();\r\n\r\n    // Handle browser 'online' and 'offline' events\r\n    const updateOnlineStatus = () => {\r\n      // If browser reports online, double-check with real fetch\r\n      if (navigator.onLine) {\r\n        checkInternet();\r\n      } else {\r\n        // If browser reports offline, trust it\r\n        setIsOnline(false);\r\n      }\r\n    };\r\n\r\n    window.addEventListener('online', updateOnlineStatus);\r\n    window.addEventListener('offline', updateOnlineStatus);\r\n\r\n    // Cleanup event listeners on unmount\r\n    return () => {\r\n      window.removeEventListener('online', updateOnlineStatus);\r\n      window.removeEventListener('offline', updateOnlineStatus);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: 'fixed',\r\n        top: 10,\r\n        right: 10,\r\n        padding: '0.3rem 0.8rem',\r\n        backgroundColor: isOnline ? 'green' : 'red',\r\n        color: 'white',\r\n        borderRadius: '12px',\r\n        fontWeight: 'bold',\r\n        zIndex: 1000,\r\n        userSelect: 'none',\r\n      }}\r\n      title={isOnline ? 'You are online' : 'You are offline'}\r\n    >\r\n      {isOnline ? 'Online' : 'Offline'}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OfflineStatus;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAACQ,SAAS,CAACC,MAAM,CAAC;;EAE1D;EACA,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B;IACAC,KAAK,CAAC,8CAA8C,EAAE;MAAEC,KAAK,EAAE;IAAW,CAAC,CAAC,CACzEC,IAAI,CAAC,MAAMN,WAAW,CAAC,IAAI,CAAC,CAAC,CAAE;IAAA,CAC/BO,KAAK,CAAC,MAAMP,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;EACtC,CAAC;EAEDN,SAAS,CAAC,MAAM;IACd;IACAS,aAAa,CAAC,CAAC;;IAEf;IACA,MAAMK,kBAAkB,GAAGA,CAAA,KAAM;MAC/B;MACA,IAAIP,SAAS,CAACC,MAAM,EAAE;QACpBC,aAAa,CAAC,CAAC;MACjB,CAAC,MAAM;QACL;QACAH,WAAW,CAAC,KAAK,CAAC;MACpB;IACF,CAAC;IAEDS,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEF,kBAAkB,CAAC;IACrDC,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEF,kBAAkB,CAAC;;IAEtD;IACA,OAAO,MAAM;MACXC,MAAM,CAACE,mBAAmB,CAAC,QAAQ,EAAEH,kBAAkB,CAAC;MACxDC,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEH,kBAAkB,CAAC;IAC3D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA;IACEgB,KAAK,EAAE;MACLC,QAAQ,EAAE,OAAO;MACjBC,GAAG,EAAE,EAAE;MACPC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,eAAe;MACxBC,eAAe,EAAElB,QAAQ,GAAG,OAAO,GAAG,KAAK;MAC3CmB,KAAK,EAAE,OAAO;MACdC,YAAY,EAAE,MAAM;MACpBC,UAAU,EAAE,MAAM;MAClBC,MAAM,EAAE,IAAI;MACZC,UAAU,EAAE;IACd,CAAE;IACFC,KAAK,EAAExB,QAAQ,GAAG,gBAAgB,GAAG,iBAAkB;IAAAyB,QAAA,EAEtDzB,QAAQ,GAAG,QAAQ,GAAG;EAAS;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEV;AAAC9B,EAAA,CAxDQD,aAAa;AAAAgC,EAAA,GAAbhC,aAAa;AA0DtB,eAAeA,aAAa;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}